package com.iwaliner.urushi.registries;

import com.iwaliner.urushi.ModCoreUrushi;
import com.iwaliner.urushi.common.blockentity.*;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.neoforged.bus.api.IEventBus;
import net.neoforged.fml.common.EventBusSubscriber;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;

@EventBusSubscriber(modid = ModCoreUrushi.ModID, bus = EventBusSubscriber.Bus.MOD)
public class BlockEntityRegister {
    public static final DeferredRegister<BlockEntityType<?>> Tiles = DeferredRegister.create(BuiltInRegistries.BLOCK_ENTITY_TYPE, ModCoreUrushi.ModID);
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<WoodenCabinetrySlabBlockEntity>> WoodenCabinetrySlabBlockEntity=Tiles.register("wooden_cabinetry_slab", () -> BlockEntityType.Builder.of(WoodenCabinetrySlabBlockEntity::new, ItemAndBlockRegister.wooden_cabinetry_slab.get(),ItemAndBlockRegister.red_urushi_wooden_cabinetry_slab.get(),ItemAndBlockRegister.white_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.orange_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.magenta_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.light_blue_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.yellow_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.lime_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.pink_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.gray_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.light_gray_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.cyan_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.purple_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.blue_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.brown_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.green_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.red_stained_wooden_cabinetry_slab.get(),ItemAndBlockRegister.black_stained_wooden_cabinetry_slab.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<WoodenCabinetryBlockEntity>> WoodenCabinetryBlockEntity=Tiles.register("wooden_cabinetry", () -> BlockEntityType.Builder.of(WoodenCabinetryBlockEntity::new, ItemAndBlockRegister.wooden_cabinetry.get(),ItemAndBlockRegister.red_urushi_wooden_cabinetry.get(),ItemAndBlockRegister.white_stained_wooden_cabinetry.get(),ItemAndBlockRegister.orange_stained_wooden_cabinetry.get(),ItemAndBlockRegister.magenta_stained_wooden_cabinetry.get(),ItemAndBlockRegister.light_blue_stained_wooden_cabinetry.get(),ItemAndBlockRegister.yellow_stained_wooden_cabinetry.get(),ItemAndBlockRegister.lime_stained_wooden_cabinetry.get(),ItemAndBlockRegister.pink_stained_wooden_cabinetry.get(),ItemAndBlockRegister.gray_stained_wooden_cabinetry.get(),ItemAndBlockRegister.light_gray_stained_wooden_cabinetry.get(),ItemAndBlockRegister.cyan_stained_wooden_cabinetry.get(),ItemAndBlockRegister.purple_stained_wooden_cabinetry.get(),ItemAndBlockRegister.blue_stained_wooden_cabinetry.get(),ItemAndBlockRegister.brown_stained_wooden_cabinetry.get(),ItemAndBlockRegister.green_stained_wooden_cabinetry.get(),ItemAndBlockRegister.red_stained_wooden_cabinetry.get(),ItemAndBlockRegister.black_stained_wooden_cabinetry.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<DoubledWoodenCabinetryBlockEntity>> DoubledWoodenCabinetryBlockEntity=Tiles.register("doubled_wooden_cabinetry", () -> BlockEntityType.Builder.of(DoubledWoodenCabinetryBlockEntity::new, ItemAndBlockRegister.doubled_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_red_urushi_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_white_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_orange_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_magenta_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_light_blue_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_yellow_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_lime_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_pink_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_gray_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_light_gray_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_cyan_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_purple_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_blue_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_brown_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_green_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_red_stained_wooden_cabinetry.get(),ItemAndBlockRegister.doubled_black_stained_wooden_cabinetry.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<RiceCauldronBlockEntity>> RiceCauldronBlockEntity=Tiles.register("rice_cauldron", () -> BlockEntityType.Builder.of(RiceCauldronBlockEntity::new, ItemAndBlockRegister.rice_cauldron.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<FryerBlockEntity>> FryerBlockEntity=Tiles.register("fryer", () -> BlockEntityType.Builder.of(FryerBlockEntity::new, ItemAndBlockRegister.fryer.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<FoxHopperBlockEntity>> FoxHopperBlockEntity=Tiles.register("fox_hopper", () -> BlockEntityType.Builder.of(FoxHopperBlockEntity::new, ItemAndBlockRegister.fox_hopper.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<SenryoubakoBlockEntity>> SenryoubakoBlockEntity=Tiles.register("senryoubako", () -> BlockEntityType.Builder.of(SenryoubakoBlockEntity::new, ItemAndBlockRegister.senryoubako.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<InvisibleButtonBlockEntity>> InvisibleButton=Tiles.register("invisible_button", () -> BlockEntityType.Builder.of(InvisibleButtonBlockEntity::new, ItemAndBlockRegister.invisible_button.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<InvisibleLeverBlockEntity>> InvisibleLever=Tiles.register("invisible_lever", () -> BlockEntityType.Builder.of(InvisibleLeverBlockEntity::new, ItemAndBlockRegister.invisible_lever.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<InvisiblePressurePlateBlockEntity>> InvisiblePressurePlate=Tiles.register("invisible_pressure_plate", () -> BlockEntityType.Builder.of(InvisiblePressurePlateBlockEntity::new, ItemAndBlockRegister.invisible_pressure_plate.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<SanboBlockEntity>> Sanbo=Tiles.register("sanbo", () -> BlockEntityType.Builder.of(SanboBlockEntity::new, ItemAndBlockRegister.sanbo_tier1.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<ShichirinBlockEntity>> Shichirin=Tiles.register("shichirin", () -> BlockEntityType.Builder.of(ShichirinBlockEntity::new, ItemAndBlockRegister.shichirin.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<SacredRockBlockEntity>> SacredRock=Tiles.register("sacred_rock", () -> BlockEntityType.Builder.of(SacredRockBlockEntity::new, ItemAndBlockRegister.wood_element_sacred_rock.get(),ItemAndBlockRegister.fire_element_sacred_rock.get(),ItemAndBlockRegister.earth_element_sacred_rock.get(),ItemAndBlockRegister.metal_element_sacred_rock.get(),ItemAndBlockRegister.water_element_sacred_rock.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<EmitterBlockEntity>> Emitter=Tiles.register("emitter", () -> BlockEntityType.Builder.of(EmitterBlockEntity::new, ItemAndBlockRegister.wood_element_emitter_tier1.get(),ItemAndBlockRegister.fire_element_emitter_tier1.get(),ItemAndBlockRegister.earth_element_emitter_tier1.get(),ItemAndBlockRegister.metal_element_emitter_tier1.get(),ItemAndBlockRegister.water_element_emitter_tier1.get(),ItemAndBlockRegister.wood_element_emitter_tier2.get(),ItemAndBlockRegister.fire_element_emitter_tier2.get(),ItemAndBlockRegister.earth_element_emitter_tier2.get(),ItemAndBlockRegister.metal_element_emitter_tier2.get(),ItemAndBlockRegister.water_element_emitter_tier2.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<TankBlockEntity>> Tank=Tiles.register("tank", () -> BlockEntityType.Builder.of(TankBlockEntity::new, ItemAndBlockRegister.wood_element_tank_tier1.get(),ItemAndBlockRegister.fire_element_tank_tier1.get(),ItemAndBlockRegister.earth_element_tank_tier1.get(),ItemAndBlockRegister.metal_element_tank_tier1.get(),ItemAndBlockRegister.water_element_tank_tier1.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<MirrorBlockEntity>> Mirror=Tiles.register("mirror", () -> BlockEntityType.Builder.of(MirrorBlockEntity::new, ItemAndBlockRegister.mirror_tier1.get(),ItemAndBlockRegister.mirror_tier2.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<ElementCraftingTableBlockEntity>> ElementCraftingTable=Tiles.register("element_crafting_table", () -> BlockEntityType.Builder.of(ElementCraftingTableBlockEntity::new, ItemAndBlockRegister.wood_element_crafting_table_tier1.get(),ItemAndBlockRegister.fire_element_crafting_table_tier1.get(),ItemAndBlockRegister.earth_element_crafting_table_tier1.get(),ItemAndBlockRegister.metal_element_crafting_table_tier1.get(),ItemAndBlockRegister.water_element_crafting_table_tier1.get(), ItemAndBlockRegister.wood_element_crafting_table_tier2.get(),ItemAndBlockRegister.fire_element_crafting_table_tier2.get(),ItemAndBlockRegister.earth_element_crafting_table_tier2.get(),ItemAndBlockRegister.metal_element_crafting_table_tier2.get(),ItemAndBlockRegister.water_element_crafting_table_tier2.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<UrushiHopperBlockEntity>> UrushiHopper=Tiles.register("urushi_hopper", () -> BlockEntityType.Builder.of(UrushiHopperBlockEntity::new, ItemAndBlockRegister.urushi_hopper.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<HokoraBlockEntity>> Hokora=Tiles.register("hokora", () -> BlockEntityType.Builder.of(HokoraBlockEntity::new, ItemAndBlockRegister.wood_element_hokora.get(),ItemAndBlockRegister.fire_element_hokora.get(),ItemAndBlockRegister.earth_element_hokora.get(),ItemAndBlockRegister.metal_element_hokora.get(),ItemAndBlockRegister.water_element_hokora.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<NullBlockEntity>> Null=Tiles.register("null", () -> BlockEntityType.Builder.of(NullBlockEntity::new, ItemAndBlockRegister.null_block.get()).build(null));
    public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<AutoCraftingTableBlockEntity>> AutoCraftingTable=Tiles.register("auto_crafting_table", () -> BlockEntityType.Builder.of(AutoCraftingTableBlockEntity::new, ItemAndBlockRegister.auto_crafting_table.get(),ItemAndBlockRegister.advanced_auto_crafting_table.get()).build(null));
   // public static final DeferredHolder<BlockEntityType<?>,BlockEntityType<RandomElementPuzzleBlockEntity>> RandomElementPuzzleBlock=Tiles.register("random_element_puzzle_block", () -> BlockEntityType.Builder.of(RandomElementPuzzleBlockEntity::new, ItemAndBlockRegister.random_element_puzzle_block.get()).build(null));



    public static void register(IEventBus eventBus) {
        Tiles.register(eventBus);
    }
}
